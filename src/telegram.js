/**
 * @fileoverview Google Sheets Smart Notifications - Telegram Integration
 * –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —á–µ—Ä–µ–∑ Telegram Bot API
 *
 * @author hawkxdev
 * @version 1.0
 * @since 2025-05-31
 */

/**
 * –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram —Å –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç Telegram Bot API –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π —Å Markdown
 *
 * @param {string} message - –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è (–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç Markdown —Ä–∞–∑–º–µ—Ç–∫—É)
 * @return {Object|null} –û—Ç–≤–µ—Ç –æ—Ç Telegram API –∏–ª–∏ null –ø—Ä–∏ –æ—à–∏–±–∫–µ
 */
function sendTelegramMessage(message) {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç—ã —á–∞—Å—Ç–æ—Ç—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    if (!checkNotificationRateLimit()) {
      debugLog('[sendTelegramMessage] –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç —á–∞—Å—Ç–æ—Ç—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π, —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–æ–ø—É—â–µ–Ω–æ');
      return { ok: false, error: 'Rate limit exceeded' };
    }

    debugLog('[sendTelegramMessage] –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è:', message.substring(0, 100) + '...');

    // –§–æ—Ä–º–∏—Ä—É–µ–º URL –¥–ª—è Telegram Bot API
    const url = `${CONFIG.TELEGRAM.API_URL}${CONFIG.TELEGRAM.BOT_TOKEN}/sendMessage`;

    // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–ª–µ–∑–Ω—É—é –Ω–∞–≥—Ä—É–∑–∫—É –¥–ª—è API –∑–∞–ø—Ä–æ—Å–∞
    const payload = {
      chat_id: CONFIG.TELEGRAM.CHAT_ID,
      text: message,
      parse_mode: "Markdown" // –í–∫–ª—é—á–∞–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É Markdown —Ä–∞–∑–º–µ—Ç–∫–∏
    };

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º POST –∑–∞–ø—Ä–æ—Å –∫ Telegram API
    const response = UrlFetchApp.fetch(url, {
      method: "post",
      headers: { "Content-Type": "application/json" },
      payload: JSON.stringify(payload)
    });

    // –ü–∞—Ä—Å–∏–º –æ—Ç–≤–µ—Ç –æ—Ç API
    const result = JSON.parse(response.getContentText());

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞
    if (!result?.ok) {
      console.error("–û—à–∏–±–∫–∞ Telegram API:", result);
      debugLog('[sendTelegramMessage] –û—à–∏–±–∫–∞ API:', JSON.stringify(result));
      return result;
    }

    debugLog('[sendTelegramMessage] –°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ');

    // –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏
    addNotificationDelay();

    return result;

  } catch (error) {
    // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º null
    console.error("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram:", error);
    debugLog('[sendTelegramMessage] –ò—Å–∫–ª—é—á–µ–Ω–∏–µ:', error.stack || error.message);

    // –ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–ø—Ä–æ—â–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
    try {
      const errorUrl = `${CONFIG.TELEGRAM.API_URL}${CONFIG.TELEGRAM.BOT_TOKEN}/sendMessage`;
      const errorPayload = {
        chat_id: CONFIG.TELEGRAM.CHAT_ID,
        text: `‚ùå –û—à–∏–±–∫–∞ —Å–∏—Å—Ç–µ–º—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: ${error.message}`,
        parse_mode: "Markdown"
      };

      UrlFetchApp.fetch(errorUrl, {
        method: "post",
        headers: { "Content-Type": "application/json" },
        payload: JSON.stringify(errorPayload)
      });

    } catch (fallbackError) {
      console.error("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–∞–∂–µ —É–ø—Ä–æ—â–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ:", fallbackError);
    }

    return null;
  }
}

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
 * @return {boolean} true –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ
 */
function testTelegramConnection() {
  try {
    const testMessage = `üß™ *–¢–ï–°–¢ –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø*\n\n` +
      `‚è∞ –í—Ä–µ–º—è: ${formatTimestamp(new Date())}\n` +
      `ü§ñ –ë–æ—Ç: ${CONFIG.TELEGRAM.BOT_USERNAME}\n` +
      `üìä Chat ID: ${CONFIG.TELEGRAM.CHAT_ID}\n\n` +
      `‚úÖ Telegram –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç!`;

    const result = sendTelegramMessage(testMessage);
    return result?.ok || false;

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ Telegram –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:', error);
    return false;
  }
}
