/**
 * @fileoverview Google Sheets Smart Notifications - New Record Detector
 * –î–µ—Ç–µ–∫—Ç–æ—Ä –Ω–æ–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π –≤ Google –¢–∞–±–ª–∏—Ü–∞—Ö (–ª–∏—Å—Ç "–ó–∞—è–≤–∫–∏")
 * –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –∏–∑ main.js onEdit —Ç—Ä–∏–≥–≥–µ—Ä–∞
 *
 * @author hawkxdev
 * @version 1.0
 * @since 2025-06-01
 */

/**
* –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–µ—Ç–µ–∫—Ç–æ—Ä–∞ –Ω–æ–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π
* –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å–æ–±—ã—Ç–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –Ω–æ–≤—ã—Ö —Å—Ç—Ä–æ–∫
* @param {Object} event - –û–±—ä–µ–∫—Ç —Å–æ–±—ã—Ç–∏—è –æ—Ç Google Apps Script onEdit —Ç—Ä–∏–≥–≥–µ—Ä–∞
*/
function detectNewRecord(event) {
try {
// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤–∫–ª—é—á–µ–Ω –ª–∏ –¥–µ—Ç–µ–∫—Ç–æ—Ä –Ω–æ–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π
if (!isNewRecordDetectorEnabled()) {
debugLog('[detectNewRecord] –î–µ—Ç–µ–∫—Ç–æ—Ä –Ω–æ–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π –æ—Ç–∫–ª—é—á–µ–Ω');
return;
}

// –í–∞–ª–∏–¥–∞—Ü–∏—è —Å–æ–±—ã—Ç–∏—è
if (!event?.range) {
            debugLog("detectNewRecord: –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ–±—ä–µ–∫—Ç event");
    return;
        }

const range = event.range;
const sheet = range.getSheet();

debugLog(`[–ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å –¥–ª—è —è—á–µ–π–∫–∏ ${range.getA1Notation()} –Ω–∞ –ª–∏—Å—Ç–µ "${sheet.getName()}"]`);

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –Ω–æ–≤–∞—è –∑–∞–ø–∏—Å—å
if (!isNewRecord(event)) {
    debugLog("–≠—Ç–æ –Ω–µ –Ω–æ–≤–∞—è –∑–∞–ø–∏—Å—å, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ");
            return;
}

        // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏
    const recordData = extractNewRecordData(sheet, range.getRow());
debugLog("–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –Ω–æ–≤–∞—è –∑–∞–ø–∏—Å—å:", JSON.stringify(recordData, null, 2));

        // –°–æ–∑–¥–∞–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        createNewRecordNotification(recordData);

    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –≤ detectNewRecord:", error);
        debugLog('[detectNewRecord] –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.stack || error.message);
    }
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–±—ã—Ç–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏
 * @param {Object} event - –û–±—ä–µ–∫—Ç —Å–æ–±—ã—Ç–∏—è –æ—Ç Google Apps Script
 * @return {boolean} true –µ—Å–ª–∏ —ç—Ç–æ –Ω–æ–≤–∞—è –∑–∞–ø–∏—Å—å
 */
function isNewRecord(event) {
    const range = event.range;
    const sheet = range.getSheet();
    const sheetName = sheet.getName();

    // –†–∞–±–æ—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ —Å –ª–∏—Å—Ç–æ–º "–ó–∞—è–≤–∫–∏"
    if (sheetName !== "–ó–∞—è–≤–∫–∏") {
        console.log(`–õ–∏—Å—Ç "${sheetName}" –Ω–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è –¥–ª—è –Ω–æ–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π`);
        return false;
    }

    // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ (–ø–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞)
    const rowIndex = range.getRow();
    if (rowIndex <= 1) {
        console.log("–ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∑–∞–≥–æ–ª–æ–≤–∫–∞—Ö");
        return false;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–∞ –ª–∏ —Å—Ç—Ä–æ–∫–∞ –ø—É—Å—Ç–æ–π –¥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è
    if (!isRowEmpty(sheet, rowIndex, range)) {
        console.log(`–°—Ç—Ä–æ–∫–∞ ${rowIndex} —É–∂–µ —Å–æ–¥–µ—Ä–∂–∞–ª–∞ –¥–∞–Ω–Ω—ã–µ - —ç—Ç–æ –∏–∑–º–µ–Ω–µ–Ω–∏–µ, –∞ –Ω–µ –Ω–æ–≤–∞—è –∑–∞–ø–∏—Å—å`);
        return false;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø –∏–∑–º–µ–Ω–µ–Ω–∏—è (–º–∞—Å—Å–æ–≤–∞—è –≤—Å—Ç–∞–≤–∫–∞ –∏–ª–∏ –æ–¥–∏–Ω–æ—á–Ω–∞—è —è—á–µ–π–∫–∞)
    const rangeData = range.getValues();
    const isMassInsertion = rangeData.length > 1 || rangeData[0].length > 1;

    return isMassInsertion ?
        checkMassInsertion(rangeData, rowIndex) :
        checkSingleCell(range, rowIndex);
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –±—ã–ª–∞ –ª–∏ —Å—Ç—Ä–æ–∫–∞ –ø—É—Å—Ç–æ–π –¥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è
 * @param {GoogleAppsScript.Spreadsheet.Sheet} sheet - –õ–∏—Å—Ç —Ç–∞–±–ª–∏—Ü—ã
 * @param {number} rowIndex - –ò–Ω–¥–µ–∫—Å —Å—Ç—Ä–æ–∫–∏
 * @param {GoogleAppsScript.Spreadsheet.Range} changedRange - –ò–∑–º–µ–Ω–µ–Ω–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω
 * @return {boolean} true –µ—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ –±—ã–ª–∞ –ø—É—Å—Ç–æ–π
 */
function isRowEmpty(sheet, rowIndex, changedRange) {
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏
    const rowData = sheet.getRange(rowIndex, 1, 1, 6).getValues()[0];

    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã –∏–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö –∫–æ–ª–æ–Ω–æ–∫
    const changedColumns = [];
    for (let col = changedRange.getColumn(); col < changedRange.getColumn() + changedRange.getNumColumns(); col++) {
        changedColumns.push(col - 1); // -1 –ø–æ—Ç–æ–º—É —á—Ç–æ –∏–Ω–¥–µ–∫—Å—ã –≤ –º–∞—Å—Å–∏–≤–µ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å 0
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–∏ –ª–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –¥—Ä—É–≥–∏–µ –∫–æ–ª–æ–Ω–∫–∏
    for (let i = 0; i < rowData.length; i++) {
        // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–Ω—ã–µ –∫–æ–ª–æ–Ω–∫–∏
        if (changedColumns.indexOf(i) !== -1) continue;

        // –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–∞—è —è—á–µ–π–∫–∞ - —Å—Ç—Ä–æ–∫–∞ –Ω–µ –±—ã–ª–∞ –ø—É—Å—Ç–æ–π
        if (rowData[i] && rowData[i].toString().trim() !== '') {
            return false;
        }
    }

    return true;
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –º–∞—Å—Å–æ–≤—É—é –≤—Å—Ç–∞–≤–∫—É –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π
 * @param {Array} rangeData - –î–∞–Ω–Ω—ã–µ –¥–∏–∞–ø–∞–∑–æ–Ω–∞
 * @param {number} startRow - –ù–∞—á–∞–ª—å–Ω–∞—è —Å—Ç—Ä–æ–∫–∞
 * @return {boolean} true –µ—Å–ª–∏ –Ω–∞–π–¥–µ–Ω–∞ –Ω–æ–≤–∞—è –∑–∞–ø–∏—Å—å
 */
function checkMassInsertion(rangeData, startRow) {
    const numRows = rangeData.length;
    const numCols = rangeData[0].length;

    console.log(`–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –º–∞—Å—Å–æ–≤–∞—è –≤—Å—Ç–∞–≤–∫–∞: ${numRows} —Å—Ç—Ä–æ–∫, ${numCols} –∫–æ–ª–æ–Ω–æ–∫`);

    for (let i = 0; i < numRows; i++) {
        const rowData = rangeData[i];
        const hasClient = rowData[2] && rowData[2].toString().trim() !== ''; // –ö–æ–ª–æ–Ω–∫–∞ C
        const hasService = rowData[4] && rowData[4].toString().trim() !== ''; // –ö–æ–ª–æ–Ω–∫–∞ E

        if (hasClient || hasService) {
            console.log(`–ù–∞–π–¥–µ–Ω–∞ –Ω–æ–≤–∞—è –∑–∞–ø–∏—Å—å –≤ —Å—Ç—Ä–æ–∫–µ ${startRow + i} - –∑–∞–ø–æ–ª–Ω–µ–Ω–æ ${hasClient ? '–ö–ª–∏–µ–Ω—Ç' : '–£—Å–ª—É–≥–∞'}`);
            return true;
        }
    }

    console.log("–í –º–∞—Å—Å–æ–≤–æ–π –≤—Å—Ç–∞–≤–∫–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –∫–ª—é—á–µ–≤—ã—Ö –ø–æ–ª–µ–π");
    return false;
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –æ–¥–∏–Ω–æ—á–Ω—É—é —è—á–µ–π–∫—É –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏
 * @param {GoogleAppsScript.Spreadsheet.Range} range - –î–∏–∞–ø–∞–∑–æ–Ω —è—á–µ–µ–∫
 * @param {number} rowIndex - –ò–Ω–¥–µ–∫—Å —Å—Ç—Ä–æ–∫–∏
 * @return {boolean} true –µ—Å–ª–∏ —ç—Ç–æ –Ω–æ–≤–∞—è –∑–∞–ø–∏—Å—å
 */
function checkSingleCell(range, rowIndex) {
    const cellValue = range.getValue();
    if (!cellValue || cellValue.toString().trim() === '') {
        console.log("–Ø—á–µ–π–∫–∞ –ø—É—Å—Ç–∞—è, –Ω–µ —Å—á–∏—Ç–∞–µ–º –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å—å—é");
        return false;
    }

    const columnIndex = range.getColumn();
    const keyColumns = [3, 5]; // C: –ö–ª–∏–µ–Ω—Ç, E: –£—Å–ª—É–≥–∞

    if (keyColumns.indexOf(columnIndex) === -1) {
        console.log(`–°—Ç–æ–ª–±–µ—Ü ${columnIndex} –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∫–ª—é—á–µ–≤—ã–º (–ö–ª–∏–µ–Ω—Ç –∏–ª–∏ –£—Å–ª—É–≥–∞) - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ`);
        return false;
    }

    console.log(`–ù–∞–π–¥–µ–Ω–∞ –Ω–æ–≤–∞—è –∑–∞–ø–∏—Å—å –≤ —Å—Ç—Ä–æ–∫–µ ${rowIndex} - –∑–∞–ø–æ–ª–Ω–µ–Ω–æ ${columnIndex === 3 ? '–ö–ª–∏–µ–Ω—Ç' : '–£—Å–ª—É–≥–∞'}`);
    return true;
}

/**
 * –ò–∑–≤–ª–µ–∫–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏ –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
 * @param {GoogleAppsScript.Spreadsheet.Sheet} sheet - –õ–∏—Å—Ç Google –¢–∞–±–ª–∏—Ü—ã
 * @param {number} rowIndex - –ò–Ω–¥–µ–∫—Å —Å—Ç—Ä–æ–∫–∏ (1-based)
 * @return {Object} –û–±—ä–µ–∫—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ –∑–∞–ø–∏—Å–∏
 */
function extractNewRecordData(sheet, rowIndex) {
    try {
        // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏ (6 —Å—Ç–æ–ª–±—Ü–æ–≤: A-F)
        const rowData = sheet.getRange(rowIndex, 1, 1, 6).getValues()[0];

        // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ —Å—Ç–æ–ª–±—Ü–∞–º —Å–æ–≥–ª–∞—Å–Ω–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ –ª–∏—Å—Ç–∞ "–ó–∞—è–≤–∫–∏"
        const recordData = {
            row: rowIndex,
            sheet: sheet.getName(),
            timestamp: new Date(),
            date: rowData[0] || '', // A: –î–∞—Ç–∞
            time: rowData[1] || '', // B: –í—Ä–µ–º—è
            client: rowData[2] || '', // C: –ö–ª–∏–µ–Ω—Ç
            email: rowData[3] || '', // D: Email
            service: rowData[4] || '', // E: –£—Å–ª—É–≥–∞
            budget: rowData[5] || '', // F: –ë—é–¥–∂–µ—Ç
        };

        // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –≤—Ä–µ–º—è –µ—Å–ª–∏ —ç—Ç–æ —á–∏—Å–ª–æ (Google Sheets –≤—Ä–µ–º—è)
        if (typeof recordData.time === 'number') {
            const hours = Math.floor(recordData.time * 24);
            const minutes = Math.floor((recordData.time * 24 * 60) % 60);
            const hoursStr = hours < 10 ? '0' + hours : hours.toString();
            const minutesStr = minutes < 10 ? '0' + minutes : minutes.toString();
            recordData.time = hoursStr + ':' + minutesStr;
        }

        return recordData;

    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–∏:", error);
        return null;
    }
}

/**
 * –°–æ–∑–¥–∞–µ—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏
 * @param {Object} recordData - –î–∞–Ω–Ω—ã–µ –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏
 */
function createNewRecordNotification(recordData) {
    try {
        // –§–æ—Ä–º–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        let message = `üÜï *–ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê!*\n\n`;

        // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—è –µ—Å–ª–∏ –æ–Ω–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã
        if (recordData.date) {
            message += `üìÖ *–î–∞—Ç–∞:* ${recordData.date}\n`;
        }

        if (recordData.time) {
            message += `‚è∞ *–í—Ä–µ–º—è:* ${recordData.time}\n`;
        }

        if (recordData.client) {
            message += `üë§ *–ö–ª–∏–µ–Ω—Ç:* ${recordData.client}\n`;
        }

        if (recordData.email) {
            message += `üìß *Email:* ${recordData.email}\n`;
        }

        if (recordData.service) {
            message += `üíº *–£—Å–ª—É–≥–∞:* ${recordData.service}\n`;
        }

        if (recordData.budget) {
            message += `üí∞ *–ë—é–¥–∂–µ—Ç:* ${recordData.budget}\n`;
        }

        // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        message += `\nüìã *–°—Ç—Ä–æ–∫–∞:* ${recordData.row}\n`;
        message += `üìä *–õ–∏—Å—Ç:* ${recordData.sheet}\n`;
        message += `‚è∞ *–ü–æ–ª—É—á–µ–Ω–æ:* ${formatTimestamp(recordData.timestamp)}`;

        console.log("–û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏:", message);

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Telegram
        sendTelegramMessage(message);

    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏:", error);
    }
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –¥–µ—Ç–µ–∫—Ç–æ—Ä–∞ –Ω–æ–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É –Ω–∞—Å—Ç—Ä–æ–µ–∫
 * @return {boolean} true –µ—Å–ª–∏ –¥–µ—Ç–µ–∫—Ç–æ—Ä –≤–∫–ª—é—á–µ–Ω
 */
function isNewRecordDetectorEnabled() {
    return getSystemSetting('ENABLE_NEW_RECORDS', true);
}
