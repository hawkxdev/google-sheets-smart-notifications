/**
 * @fileoverview Google Sheets Smart Notifications - Utilities
 * –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –æ–±—â–µ–≥–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
 *
 * @author hawkxdev
 * @version 1.0
 * @since 2025-05-31
 */

/**
 * –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è —Ç–∏–ø–æ–≤ —Å—Ç–∞—Ç—É—Å–æ–≤
 */
const STATUS_TYPES = {
    COMPLETED: 'completed',
    IN_PROGRESS: 'in_progress',
    PROBLEM: 'problem',
    READY: 'ready'
};

/**
 * –ö–ª—é—á–µ–≤—ã–µ —Å—Ç–æ–ª–±—Ü—ã –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
 */
const KEY_COLUMNS = ['–∫–ª–∏–µ–Ω—Ç', '—Ç–æ–≤–∞—Ä', '–∑–∞–∫–∞–∑', '–ø—Ä–æ–µ–∫—Ç', '–∑–∞–¥–∞—á–∞', 'id'];

/**
 * –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –∏–Ω–¥–µ–∫—Å —Å—Ç–æ–ª–±—Ü–∞ –≤ –±—É–∫–≤–µ–Ω–Ω–æ–µ –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏–µ
 * @param {number} colIndex - –ò–Ω–¥–µ–∫—Å —Å—Ç–æ–ª–±—Ü–∞ (1-based)
 * @return {string} –ë—É–∫–≤–µ–Ω–Ω–æ–µ –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏–µ (A, B, C, ...)
 */
function columnIndexToLetter(colIndex) {
    let letter = '';
    while (colIndex > 0) {
        colIndex--;
        letter = String.fromCharCode(65 + (colIndex % 26)) + letter;
        colIndex = Math.floor(colIndex / 26);
    }
    return letter;
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç–æ–ª–±—Ü–∞ –∏–∑ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–∏ –ª–∏—Å—Ç–∞
 * @param {string} sheetName - –ù–∞–∑–≤–∞–Ω–∏–µ –ª–∏—Å—Ç–∞
 * @param {number} colIndex - –ò–Ω–¥–µ–∫—Å —Å—Ç–æ–ª–±—Ü–∞ (1-based)
 * @return {string} –ù–∞–∑–≤–∞–Ω–∏–µ —Å—Ç–æ–ª–±—Ü–∞ –∏–ª–∏ –±—É–∫–≤–µ–Ω–Ω–æ–µ –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏–µ
 */
function getColumnName(sheetName, colIndex) {
    try {
        const sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName(sheetName);

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ª–∏—Å—Ç –Ω–∞–π–¥–µ–Ω
        if (!sheet) {
            console.error(`–õ–∏—Å—Ç '${sheetName}' –Ω–µ –Ω–∞–π–¥–µ–Ω`);
            return columnIndexToLetter(colIndex);
        }

        const headerValue = sheet.getRange(1, colIndex).getValue();

        if (headerValue?.toString().trim()) {
            return headerValue.toString();
        }

        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –±—É–∫–≤–µ–Ω–Ω–æ–µ –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏–µ —Å—Ç–æ–ª–±—Ü–∞ –∫–∞–∫ fallback
        return columnIndexToLetter(colIndex);

    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–º–µ–Ω–∏ —Å—Ç–æ–ª–±—Ü–∞:", error);
        return columnIndexToLetter(colIndex);
    }
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç —Å—Ç—Ä–æ–∫–∏ - –¥–∞–Ω–Ω—ã–µ –∏–∑ –∫–ª—é—á–µ–≤—ã—Ö —Å—Ç–æ–ª–±—Ü–æ–≤
 * @param {string} sheetName - –ù–∞–∑–≤–∞–Ω–∏–µ –ª–∏—Å—Ç–∞
 * @param {number} rowIndex - –ò–Ω–¥–µ–∫—Å —Å—Ç—Ä–æ–∫–∏ (1-based)
 * @return {string} –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
 */
function getRowContext(sheetName, rowIndex) {
    try {
        const sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName(sheetName);

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ª–∏—Å—Ç –Ω–∞–π–¥–µ–Ω
        if (!sheet) {
            console.error(`–õ–∏—Å—Ç '${sheetName}' –Ω–µ –Ω–∞–π–¥–µ–Ω`);
            return '';
        }

        // –ü–æ–ª—É—á–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∏–∑ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–∏
        const lastColumn = sheet.getLastColumn();
        const headers = sheet.getRange(1, 1, 1, lastColumn).getValues()[0];

        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–æ–∫–∏
        const rowData = sheet.getRange(rowIndex, 1, 1, lastColumn).getValues()[0];

        let context = '';

        // –ò—â–µ–º –∫–ª—é—á–µ–≤—ã–µ —Å—Ç–æ–ª–±—Ü—ã –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
        for (let i = 0; i < headers.length; i++) {
            const header = headers[i]?.toString().toLowerCase();
            const value = rowData[i];

            if (value && KEY_COLUMNS.some(key => header?.includes(key))) {
                context += `üìã *${headers[i]}:* ${value}\n`;
            }
        }

        return context;

    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ —Å—Ç—Ä–æ–∫–∏:", error);
        return '';
    }
}

/**
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —ç–º–æ–¥–∑–∏ –¥–ª—è —Ç–∏–ø–∞ —Å—Ç–∞—Ç—É—Å–∞
 * @param {string} statusType - –¢–∏–ø —Å—Ç–∞—Ç—É—Å–∞
 * @return {string} –≠–º–æ–¥–∑–∏
 */
function getStatusEmoji(statusType) {
    const emojis = {
        [STATUS_TYPES.COMPLETED]: '‚úÖ',
        [STATUS_TYPES.IN_PROGRESS]: 'üü°',
        [STATUS_TYPES.PROBLEM]: 'üî¥',
        [STATUS_TYPES.READY]: 'üü¢'
    };
    return emojis[statusType] || 'üîÑ';
}

/**
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
 * @param {string} statusType - –¢–∏–ø —Å—Ç–∞—Ç—É—Å–∞
 * @return {string} –û–ø–∏—Å–∞–Ω–∏–µ
 */
function getStatusDescription(statusType) {
    const descriptions = {
        [STATUS_TYPES.COMPLETED]: '–í—ã–ø–æ–ª–Ω–µ–Ω',
        [STATUS_TYPES.IN_PROGRESS]: '–í —Ä–∞–±–æ—Ç–µ',
        [STATUS_TYPES.PROBLEM]: '–ü—Ä–æ–±–ª–µ–º–∞',
        [STATUS_TYPES.READY]: '–ì–æ—Ç–æ–≤ –∫ —Å–¥–∞—á–µ'
    };
    return descriptions[statusType] || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å';
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ª–∏—Å—Ç —Å–ª—É–∂–µ–±–Ω—ã–º
 * @param {string} sheetName - –ù–∞–∑–≤–∞–Ω–∏–µ –ª–∏—Å—Ç–∞
 * @return {boolean} true, –µ—Å–ª–∏ –ª–∏—Å—Ç —Å–ª—É–∂–µ–±–Ω—ã–π
 */
function isSystemSheet(sheetName) {
    return sheetName === "–ù–∞—Å—Ç—Ä–æ–π–∫–∏" || sheetName.startsWith("_");
}

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –≤—Ä–µ–º–µ–Ω–Ω—É—é –º–µ—Ç–∫—É –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
 * @param {Date} timestamp - –í—Ä–µ–º–µ–Ω–Ω–∞—è –º–µ—Ç–∫–∞
 * @return {string} –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è
 */
function formatTimestamp(timestamp) {
    return timestamp.toLocaleString('ru-RU');
}

/**
 * –ë–µ–∑–æ–ø–∞—Å–Ω–æ –ø–æ–ª—É—á–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ —è—á–µ–π–∫–∏ –∫–∞–∫ —Å—Ç—Ä–æ–∫—É
 * @param {any} cellValue - –ó–Ω–∞—á–µ–Ω–∏–µ —è—á–µ–π–∫–∏
 * @return {string} –°—Ç—Ä–æ–∫–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è
 */
function getCellValueAsString(cellValue) {
    if (!cellValue) return '';
    return cellValue.toString().toLowerCase().trim();
}
