/**
 * @fileoverview Google Sheets Smart Notifications - Status Change Detector
 * –î–µ—Ç–µ–∫—Ç–æ—Ä –∏–∑–º–µ–Ω–µ–Ω–∏–π —Å—Ç–∞—Ç—É—Å–æ–≤ –≤ —è—á–µ–π–∫–∞—Ö (—ç–º–æ–¥–∑–∏ + —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å—Ç–∞—Ç—É—Å—ã)
 * –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –∏–∑ main.js onEdit —Ç—Ä–∏–≥–≥–µ—Ä–∞
 *
 * @author hawkxdev
 * @version 1.0
 * @since 2025-05-31
 */

const STATUS_KEYWORDS = {
    completed: ['‚úÖ', '–≤—ã–ø–æ–ª–Ω–µ–Ω', '–∑–∞–≤–µ—Ä—à–µ–Ω', '–≥–æ—Ç–æ–≤–æ'],
    in_progress: ['üü°', '–≤ —Ä–∞–±–æ—Ç–µ', '—Ä–∞–±–æ—Ç–∞', 'processing'],
    problem: ['üî¥', '–ø—Ä–æ–±–ª–µ–º–∞', '–æ—à–∏–±–∫–∞', 'error'],
    ready: ['üü¢', '–≥–æ—Ç–æ–≤ –∫ —Å–¥–∞—á–µ', '–≥–æ—Ç–æ–≤', 'ready']
};

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–µ –≤ —è—á–µ–π–∫–µ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –µ—Å–ª–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω —Å—Ç–∞—Ç—É—Å
 * @param {GoogleAppsScript.Events.SheetsOnEdit} event - –û–±—ä–µ–∫—Ç —Å–æ–±—ã—Ç–∏—è onEdit
 */
function detectStatusChange(event) {
    try {
        if (!event?.range) {
            console.log("detectStatusChange: –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ–±—ä–µ–∫—Ç event", event);
            return;
        }

        const range = event.range;
        const sheet = range.getSheet();
        const cellValue = range.getValue();

        console.log(`–ü—Ä–æ–≤–µ—Ä—è–µ–º —è—á–µ–π–∫—É ${range.getA1Notation()} –Ω–∞ –ª–∏—Å—Ç–µ "${sheet.getName()}": ${cellValue}`);

        const statusType = determineStatusType(cellValue);
        if (!statusType) {
            console.log("–ò–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Å—Ç–∞—Ç—É—Å–æ–º ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞–µ–º");
            return;
        }

        const cellInfo = {
            sheet: sheet.getName(),
            address: range.getA1Notation(),
            value: cellValue,
            statusType: statusType,
            row: range.getRow(),
            col: range.getColumn(),
            timestamp: new Date()
        };

        const message = buildStatusMessage(cellInfo);
        console.log("–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:", message);
        sendTelegramMessage(message);

    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –≤ detectStatusChange:", error.stack || error.message);
    }
}

/**
 * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ç–∏–ø —Å—Ç–∞—Ç—É—Å–∞ –ø–æ –∑–Ω–∞—á–µ–Ω–∏—é —è—á–µ–π–∫–∏
 * @param {any} cellValue - –ó–Ω–∞—á–µ–Ω–∏–µ —è—á–µ–π–∫–∏
 * @return {string|null} –°—Ç–∞—Ç—É—Å –∏–ª–∏ null
 */
function determineStatusType(cellValue) {
    if (!cellValue) return null;

    const valueStr = String(cellValue).toLowerCase().trim();

    for (const type in STATUS_KEYWORDS) {
        if (STATUS_KEYWORDS.hasOwnProperty(type)) {
            const keywords = STATUS_KEYWORDS[type];
            for (const keyword of keywords) {
                if (valueStr.includes(keyword)) {
                    return type;
                }
            }
        }
    }

    return null;
}

/**
 * –§–æ—Ä–º–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞
 * @param {Object} cellInfo - –î–∞–Ω–Ω—ã–µ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏
 * @return {string} –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
 */
function buildStatusMessage(cellInfo) {
    const emoji = getStatusEmoji(cellInfo.statusType);
    const statusDescription = getStatusDescription(cellInfo.statusType);
    const columnName = getColumnName(cellInfo.sheet, cellInfo.col);
    const rowContext = getRowContext(cellInfo.sheet, cellInfo.row);
    const timestamp = formatTimestamp(cellInfo.timestamp);

    return `${emoji} *–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞*\n\n` +
        `üìä *–õ–∏—Å—Ç:* ${cellInfo.sheet}\n` +
        `üìç *–Ø—á–µ–π–∫–∞:* ${cellInfo.address}\n` +
        `üìù *–°—Ç–æ–ª–±–µ—Ü:* ${columnName}\n` +
        `üîÑ *–°—Ç–∞—Ç—É—Å:* ${statusDescription}\n` +
        `üí¨ *–ó–Ω–∞—á–µ–Ω–∏–µ:* ${cellInfo.value}\n` +
        `${rowContext}` +
        `‚è∞ *–í—Ä–µ–º—è:* ${timestamp}`;
}
